/**
 * Created by Evelyn Moss on 11/17/2016.
 */
package PokemonTabletopRandomizer.PokemonRandomizer.src;
import java.util.HashMap;
import java.util.concurrent.ThreadLocalRandom;

public enum Terrain {

	GRASSLAND (6493, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048,
			2176, 2304, 2432, 2560, 2624, 2688, 2752, 2816, 2880, 2944, 3008, 3072, 3136, 3200, 3264, 3328, 3392, 3456,
			3520, 3584, 3648, 3712, 3776, 3840, 3904, 3968, 4032, 4096}),
	SCRUBLAND (6694, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048,
			2176, 2304, 2432, 2496, 2560, 2624, 2688, 2752, 2816, 2880, 2944, 3008, 3072, 3136, 3200, 3264, 3328, 3392,
			3456, 3520, 3584, 3648, 3520, 3584, 3648, 3712, 3776, 3840, 3904, 3968, 4032, 4096}),
	HILLS (6792, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048, 2176,
			2304, 2368, 2432, 2496, 256, 2624, 2688, 2752, 2816, 2880, 2944, 3008, 3072, 3136, 3200, 3264, 3328, 3392,
			3456, 352, 3584, 3648, 3712, 3776, 3840, 3904, 3968, 4032, 4096}),
	URBAN (4997, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048, 2112,
			2176, 2240, 2304, 2368, 2432, 2496, 2560, 2624, 2688, 2752, 2816, 2880, 2944, 3008, 3072, 3136, 3200, 3264,
			3328, 3392, 3456, 3520, 3552, 3584, 3616, 3648, 3680, 3712, 3744, 3776, 3808, 3840, 3872, 3904, 3936, 3968,
			4000, 4032, 4064}),
	DESERT (4914, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1472, 1536, 1600, 1664, 1728, 1792,
			1856, 1920, 1984, 2048, 2112, 2176, 2240, 2304, 2368, 2432, 2496, 2560, 2624, 2688, 2752, 2816, 28880, 2944,
			3008, 3072, 3136, 3200, 3264, 3328, 3392, 3456, 3488, 3520, 3552, 3584, 3616, 3648, 3680, 3712, 3744, 3776,
			3808, 3840, 3872, 3904, 3936, 3968, 4000, 4032, 4064}),
	JUNGLE (5882, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920, 2048, 2112,
			2176, 2240, 2304, 2368, 2432, 2496, 2560, 2624, 2688, 2752, 2816, 2880, 2944, 3008, 3072, 3136, 3200, 3264,
			3328, 3392, 3456, 3520, 3584, 3648, 3712, 3776, 3840, 3904, 3968, 4032, 4064}),
	MOUNTAIN (4198, new int[]{128, 256, 384, 512, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408,
			1472, 1536, 1600, 1664, 1728, 1792, 1856, 1920, 1984, 2048, 2112, 2176, 2240, 2304, 2368, 2432, 2496, 2560,
			2624, 2688, 2720, 2752, 2784, 2816, 2848, 2880, 2912, 2944, 2976, 3008, 3040, 3072, 3104, 3136, 3168, 3200,
			3232, 3264, 3296, 3328, 3360, 3392, 3424, 3456, 3488, 3520, 3552, 3584, 3616, 3648, 3680, 3712, 3744, 3776,
			3808, 3824, 3840, 3856, 3872, 3888, 3904, 3920, 3936, 3952, 3968, 3984, 4000, 4016, 4032, 4048}),

	FIRE_HILLS (4043, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1216, 1280, 1344, 1408, 1472, 1536, 1600,
			1664, 1728, 1792, 1856, 1920, 1984, 2048, 2112, 2176, 2240, 2304, 2368, 2432, 2496, 2560, 2624, 2688, 2752,
			2784, 2816, 2848, 2880, 2912, 2944, 2976, 3008, 3040, 3072, 3104, 3136, 3168, 3200, 3232, 3264, 3296, 3328,
			3360, 3392, 3424, 3456, 3488, 3520, 3552, 3584, 3616, 3648, 3680, 3712, 3744, 3776, 3808, 3824, 3840, 3856,
			3872, 3888, 3904, 3920, 3936, 3952, 3968, 3976, 3984, 3992, 4000, 4008, 4012, 4016, 4020, 4024, 4028, 4032,
			4036, 4040, 4041, 4042, 4043}),
	OASIS (2711, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536, 1600,
			1664, 1728, 1792, 1856, 1920, 1984, 2016, 2048, 2080, 2112, 2144, 2176, 2208, 2240, 2272, 2304, 2336, 2368,
			2400, 2432, 2464, 2496, 2528, 2544, 2560, 2576, 2592, 2608, 2624, 2640, 2648, 2656, 2664, 2672, 2680, 2688,
			2696, 2700, 2704, 2708, 2709, 2710, 2711}),
	COAST (2104, new int[]{128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1216, 1280, 1344, 1408, 1472, 1536, 1600, 1664,
			1728, 1760, 1792, 1824, 1856, 1888, 1920, 1952, 1984, 2016, 2048, 2064, 2080, 2096, 2104}),
	COLD (2063, new int[]{128, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1248,
			1280, 1312, 1344, 1376, 1408, 1440, 1472, 1504, 1536, 1568, 1600, 1632, 1664, 1696, 1728, 1760, 1792, 1824,
			1840, 1856, 1872, 1888, 1904, 1920, 1936, 1952, 1968, 1984, 2000, 2016, 2032, 2036, 2040, 2044, 2048, 2052,
			2056, 2060, 2061, 2062, 2063}),
	RIVER (1824, new int[]{128, 256, 384, 512, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408,
			1472, 1536, 1568, 1600, 1632, 1664, 1696, 1728, 1760, 1776, 1784, 1792, 1800, 1808, 1816, 1820, 1824}),
	OCEAN (1577, new int[]{128, 256, 384, 512, 640, 768, 832, 896, 960, 1024, 1088, 1120, 1152, 1184, 1216, 1248, 1280,
			1312, 1344, 1376, 1408, 1440, 1472, 1488, 1504, 1520, 1536, 1552, 1568, 1576, 1577}),
	ROCKY_COAST (1377, new int[]{128, 256, 384, 448, 512, 576, 640, 704, 768, 832, 896, 928, 960, 992, 1024, 1056, 1088,
			1120, 1152, 1184, 1216, 1248, 1280, 1296, 1312, 1328, 1344, 1360, 1368, 1372, 1376, 1377});

	Terrain(int maxRoll, int[] maxesOfRanges){
		numPokemon = maxRoll;
		maxes = maxesOfRanges;
	}

	int numPokemon;
	int[] maxes;

	public static Pokemon rollWild(Terrain t){
		int roll = ThreadLocalRandom.current().nextInt(1, t.numPokemon+1);
		return Pokedex.getPokemon(t, roll);
	}

}
